{"version":3,"file":"75924bf946bfdb8a803ee1bc3c71ec0461911005-123402e1fc124e4874dd.js","mappings":"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A;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU,kBAAQ,aAAa,kBAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,WAAW,iBAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE,yBAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,yBAAe;AACjB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA,gDAAgD,QAAQ;AACxD;AACA;AAC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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/HourglassEmpty.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/PanTool.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/QuestionMark.js","webpack://jacdac-docs/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/List/listClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/List/List.js","webpack://jacdac-docs/./node_modules/@mui/material/ListItemText/listItemTextClasses.js","webpack://jacdac-docs/./jacdac-ts/src/testdom/compiler.ts","webpack://jacdac-docs/./src/components/testdom/DeviceTestExporter.tsx","webpack://jacdac-docs/./src/components/testdom/TestStateIcon.tsx","webpack://jacdac-docs/./src/components/testdom/TestTreeView.tsx","webpack://jacdac-docs/./src/components/testdom/filters.ts","webpack://jacdac-docs/./node_modules/use-editable/dist/use-editable.es.js","webpack://jacdac-docs/./src/components/ui/HighlightTextField.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5-4-4V4h8v3.5l-4 4z\"\n}), 'HourglassEmpty');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\"\n}), 'PanTool');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.07 12.85c.77-1.39 2.25-2.21 3.11-3.44.91-1.29.4-3.7-2.18-3.7-1.69 0-2.52 1.28-2.87 2.34L6.54 6.96C7.25 4.83 9.18 3 11.99 3c2.35 0 3.96 1.07 4.78 2.41.7 1.15 1.11 3.3.03 4.9-1.2 1.77-2.35 2.31-2.97 3.45-.25.46-.35.76-.35 2.24h-2.89c-.01-.78-.13-2.05.48-3.15zM14 20c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'QuestionMark');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListUtilityClass(slot) {\n  return generateUtilityClass('MuiList', slot);\n}\nconst listClasses = generateUtilityClasses('MuiList', ['root', 'padding', 'dense', 'subheader']);\nexport default listClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from './ListContext';\nimport { getListUtilityClass } from './listClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePadding,\n    dense,\n    subheader\n  } = ownerState;\n  const slots = {\n    root: ['root', !disablePadding && 'padding', dense && 'dense', subheader && 'subheader']\n  };\n  return composeClasses(slots, getListUtilityClass, classes);\n};\nconst ListRoot = styled('ul', {\n  name: 'MuiList',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];\n  }\n})(({\n  ownerState\n}) => _extends({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  position: 'relative'\n}, !ownerState.disablePadding && {\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.subheader && {\n  paddingTop: 0\n}));\nconst List = /*#__PURE__*/React.forwardRef(function List(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiList'\n  });\n  const {\n      children,\n      className,\n      component = 'ul',\n      dense = false,\n      disablePadding = false,\n      subheader\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  const ownerState = _extends({}, props, {\n    component,\n    dense,\n    disablePadding\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsxs(ListRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      children: [subheader, children]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, vertical padding is removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default List;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { JDBus } from \"../jdom/bus\"\nimport {\n    BaseReg,\n    ControlReg,\n    SRV_CONTROL,\n    SystemReg,\n    SystemStatusCodes,\n} from \"../jdom/constants\"\nimport { prettyDuration, serviceName } from \"../jdom/pretty\"\nimport {\n    isEvent,\n    isReading,\n    isRegister,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecificationFromName,\n} from \"../jdom/spec\"\nimport { delay, JSONTryParse, parseIdentifier } from \"../jdom/utils\"\nimport {\n    DeviceStatsTest,\n    DeviceTest,\n    EventTest,\n    PanelTest,\n    RegisterOracle,\n    RegisterTest,\n    ServiceCommandTest,\n    ServiceTest,\n    StatusLightTest,\n    TestLogger,\n    TestNode,\n} from \"./nodes\"\nimport {\n    DeviceTestSpec,\n    EventTestRule,\n    OracleTestSpec,\n    PanelTestSpec,\n    ReadingTestRule,\n    ServiceTestRule,\n    ServiceTestSpec,\n    SetIntensityAndValueTestRule,\n    TestState,\n} from \"./spec\"\nimport { resolveServiceCommandTest, resolveTestRules } from \"./testrules\"\n\nfunction createSetIntensityAndValueRule(\n    rule: SetIntensityAndValueTestRule,\n): TestNode {\n    const { name: ruleName, steps } = rule\n    const name =\n        ruleName ||\n        `set intensity, value to ${steps\n            .map(\n                ({ duration, intensity, value }) =>\n                    `${prettyDuration(duration)}: ${\n                        intensity !== undefined ? `i:${intensity}, ` : \"\"\n                    }${value !== undefined ? `v:${value}}` : \"\"}`,\n            )\n            .join(\", \")}`\n    return new ServiceCommandTest({\n        name,\n        start: test => {\n            let mounted = true\n            const work = async () => {\n                const service = test.service\n                const intensityRegister = service.intensityRegister\n                const valueRegister = service.valueRegister\n                let k = 0\n                while (mounted) {\n                    const step = steps[k++ % steps.length]\n                    const { duration, intensity, value } = step\n\n                    if (intensity !== undefined)\n                        await intensityRegister.sendSetPackedAsync(\n                            [intensity],\n                            true,\n                        )\n                    if (value !== undefined)\n                        await valueRegister.sendSetPackedAsync([value], true)\n\n                    await delay(duration)\n\n                    if (k > steps.length) test.state = TestState.Pass\n                }\n            }\n            work()\n            return () => {\n                mounted = false\n            }\n        },\n    })\n}\n\nfunction createReadingRule(\n    rule: ReadingTestRule,\n): (node: RegisterTest, logger: TestLogger) => TestState {\n    const { value, tolerance, samples = 1, type, op } = rule\n    const tol = isNaN(tolerance) || tolerance <= 0 ? 0 : tolerance\n    const opf = {\n        \"==\": (a: number, b: number, tol: number) => Math.abs(a - b) <= tol,\n        \"<\": (a: number, b: number, tol: number) => a < b + tol,\n        \">\": (a: number, b: number, tol: number) => a > b - tol,\n    }[op || \"==\"]\n    let count = 0\n    let seen = count >= samples\n    let incorrect: number = undefined\n    return (node, logger) => {\n        if (!seen) {\n            const { register } = node\n            const [current] = register.unpackedValue as number[]\n            const active = current !== undefined && opf(current, value, tol)\n            if (active) {\n                count++\n                incorrect = undefined\n            } else {\n                count = 0\n                incorrect = current\n            }\n            // recompute\n            seen = count >= samples\n        }\n        if (incorrect) logger(`incorrect ${type} value (${incorrect})`)\n        else if (count === 0) logger(`missing ${type} value`)\n        else if (!seen)\n            logger(`waiting for more ${type} values (${count} < ${seen})`)\n        else logger(`${type} value seen`)\n        return seen ? TestState.Pass : TestState.Running\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction createEventRule(\n    rule: EventTestRule,\n): (node: EventTest, logger: TestLogger) => TestState {\n    return (node, logger) => {\n        const { event } = node\n        const seen = event?.count > 0\n        if (!seen) logger(`event not observed`)\n        return event?.count > 0 ? TestState.Pass : TestState.Running\n    }\n}\n\nfunction createOracleRule(\n    oracle: OracleTestSpec,\n): (node: RegisterTest, logger: TestLogger) => TestState {\n    let samples = 0\n    const threshold = 5\n    const { tolerance = 0 } = oracle\n    return (node, logger) => {\n        const { register } = node\n        // find oracle register\n        const oracleRegister = node.resolveOracle(register)?.register\n        if (!oracleRegister) {\n            logger(`oracle not found`)\n            return TestState.Fail\n        }\n\n        const [oracleValue] = (oracleRegister.unpackedValue || []) as [number]\n        const [value] = (register.unpackedValue || []) as [number]\n\n        //console.log(\"oracle\", { oracleValue, value })\n        if (\n            tolerance <= 0\n                ? value === oracleValue\n                : Math.abs(value - oracleValue) <= tolerance\n        ) {\n            samples++\n        } else {\n            samples = 0\n        }\n\n        if (samples == 0) {\n            logger(\n                tolerance <= 0\n                    ? `${value} != ${oracleValue}`\n                    : `error ${Math.abs(value - oracleValue)} > ${tolerance}`,\n            )\n            return TestState.Fail\n        }\n        if (samples < threshold) {\n            logger(`sampling register values...`)\n            return TestState.Running\n        } else {\n            logger(\n                tolerance <= 0\n                    ? `${value} == ${oracleValue}`\n                    : `error ${Math.abs(value - oracleValue)} <= ${tolerance}`,\n            )\n            return TestState.Pass\n        }\n    }\n}\n\nfunction createReadingTest(\n    specification: jdspec.ServiceSpec,\n    readingRule: ReadingTestRule,\n) {\n    const { type, name, value, tolerance, manualSteps, op = \"==\" } = readingRule\n    const registerId =\n        type === \"reading\"\n            ? SystemReg.Reading\n            : type === \"intensity\"\n            ? SystemReg.Intensity\n            : SystemReg.Value\n    const registerSpec = specification.packets.find(\n        pkt => isRegister(pkt) && pkt.identifier === registerId,\n    )\n    return new RegisterTest(\n        name ||\n            `observe ${registerSpec.name} ${op} ${value}${\n                tolerance ? ` +/-${tolerance}` : \"\"\n            }`,\n        manualSteps,\n        registerId,\n        createReadingRule(readingRule),\n    )\n}\n\nfunction createEventTest(\n    specification: jdspec.ServiceSpec,\n    eventRule: EventTestRule,\n) {\n    const { name, eventName, manualSteps } = eventRule\n    const pkt = specification.packets.find(\n        pkt => isEvent(pkt) && pkt.name === eventName,\n    )\n    return new EventTest(\n        name || `raise event ${eventName}`,\n        manualSteps,\n        pkt.identifier,\n        createEventRule(eventRule),\n    )\n}\n\nfunction compileTestRule(\n    specification: jdspec.ServiceSpec,\n    rule: ServiceTestRule,\n): TestNode {\n    const { type } = rule\n    switch (type) {\n        case \"setIntensityAndValue\":\n            return createSetIntensityAndValueRule(\n                rule as SetIntensityAndValueTestRule,\n            )\n        case \"value\":\n        case \"intensity\":\n        case \"reading\":\n            return createReadingTest(specification, rule as ReadingTestRule)\n        case \"event\":\n            return createEventTest(specification, rule as EventTestRule)\n        default:\n            return undefined\n    }\n}\n\nexport function tryParsePanelTestSpec(source: string) {\n    const json = JSONTryParse(source) as PanelTestSpec\n    if (\n        json.devices &&\n        Array.isArray(json.devices) &&\n        json.devices.every(d => !!d.productIdentifier && d.count > 0) &&\n        (!json.oracles ||\n            (Array.isArray(json.oracles) &&\n                json.oracles.every(o => !!o?.serviceClass && !!o?.deviceId)))\n    ) {\n        for (const oracle of json.oracles || []) {\n            oracle.serviceClass = parseIdentifier(oracle.serviceClass)\n        }\n\n        // normalize json\n        for (const device of json.devices) {\n            device.productIdentifier = parseIdentifier(device.productIdentifier)\n            if (device.services) {\n                for (const service of device.services) {\n                    if (service.name) {\n                        const spec = serviceSpecificationFromName(service.name)\n                        if (!spec) {\n                            console.log(`unknown service ${service.name}`)\n                            return undefined\n                        }\n                        service.serviceClass = spec.classIdentifier\n                    }\n                    service.serviceClass = parseIdentifier(service.serviceClass)\n                    if (!service.serviceClass) return undefined\n                }\n            }\n        }\n\n        return json\n    }\n\n    return undefined\n}\n\nfunction createStatusCodeTest() {\n    return new RegisterTest(\n        \"status code should be ready, sleeping or not implemented\",\n        undefined,\n        BaseReg.StatusCode,\n        (node, logger) => {\n            const { register } = node\n            const { unpackedValue = [] } = register\n            if (register.notImplemented || !unpackedValue.length) {\n                logger(`not implemented`)\n                return TestState.Pass\n            }\n            const [code, vendorCode] = unpackedValue\n            if (vendorCode !== 0) {\n                logger(`vendor code in error mode`)\n                return TestState.Fail\n            }\n            if (code === SystemStatusCodes.Initializing) {\n                logger(`initializing...`)\n                return TestState.Running\n            } else if (code === SystemStatusCodes.Calibrating) {\n                logger(`calibrating...`)\n                return TestState.Running\n            }\n            const ok =\n                code === SystemStatusCodes.Ready ||\n                code === SystemStatusCodes.Sleeping\n            if (ok) return TestState.Pass\n\n            logger(`expected status code equals to 0x0,0x0 or 0x3,0x0`)\n            return TestState.Fail\n        },\n    )\n}\n\nexport function createDeviceTest(\n    bus: JDBus,\n    device: DeviceTestSpec,\n    oracles?: OracleTestSpec[],\n): DeviceTest {\n    const { deviceCatalog } = bus\n    const { productIdentifier, firmwareVersion, factory } = device\n    const specification =\n        deviceCatalog.specificationFromProductIdentifier(productIdentifier)\n    const deviceTest = new DeviceTest(productIdentifier, specification, device)\n\n    // add status light\n    deviceTest.appendChild(new DeviceStatsTest())\n    deviceTest.appendChild(new StatusLightTest())\n\n    // add test for control\n    const controlTest = new ServiceTest(\"control\", SRV_CONTROL)\n    controlTest.appendChild(createStatusCodeTest())\n    if (firmwareVersion) {\n        controlTest.appendChild(\n            new RegisterTest(\n                `firmware version is ${firmwareVersion}`,\n                undefined,\n                ControlReg.FirmwareVersion,\n                (node, logger) => {\n                    const { register } = node\n                    const value = register?.stringValue\n                    const ok = value === firmwareVersion\n                    if (value && !ok)\n                        logger(\n                            `incorrect firmware version, expected ${firmwareVersion}`,\n                        )\n                    return ok\n                        ? TestState.Pass\n                        : value\n                        ? TestState.Fail\n                        : TestState.Running\n                },\n            ),\n        )\n    }\n    deviceTest.appendChild(controlTest)\n\n    const services: ServiceTestSpec[] =\n        device.services ||\n        specification.services.map(srv => ({ serviceClass: srv }))\n\n    for (const service of services) {\n        const { serviceClass, count = 1, disableBuiltinRules } = service\n        const serviceOracle = oracles?.find(\n            oracle => oracle.serviceClass === serviceClass,\n        )\n        const specification =\n            serviceSpecificationFromClassIdentifier(serviceClass)\n        for (let i = 0; i < count; ++i) {\n            const serviceTest = new ServiceTest(\n                specification?.shortName.toLowerCase() ||\n                    `0x${serviceClass.toString(16)}`,\n                serviceClass,\n            )\n            {\n                // add status code\n                serviceTest.appendChild(createStatusCodeTest())\n\n                const packets = specification?.packets\n                // reading value rule if any\n                const readingSpec = packets?.find(isReading)\n                if (readingSpec) {\n                    const readingOptional = readingSpec.optional\n                    serviceTest.appendChild(\n                        new RegisterTest(\n                            `${readingSpec.name} data should stream`,\n                            undefined,\n                            readingSpec.identifier,\n                            node => {\n                                const { register } = node\n                                const { unpackedValue = [], notImplemented } =\n                                    register\n\n                                if (readingOptional && notImplemented) {\n                                    node.output =\n                                        \"optional register not implemented\"\n                                    return TestState.Pass\n                                }\n\n                                return unpackedValue?.length > 0\n                                    ? TestState.Pass\n                                    : TestState.Running\n                            },\n                        ),\n                    )\n                }\n                // add oracle\n                if (readingSpec && serviceOracle) {\n                    const rt = new RegisterTest(\n                        `${readingSpec.name} near oracle`,\n                        undefined,\n                        SystemReg.Reading,\n                        createOracleRule(serviceOracle),\n                    )\n                    const oracleNode = new RegisterOracle(\n                        `oracle reading`,\n                        serviceOracle.deviceId,\n                        serviceOracle.serviceIndex,\n                        serviceClass,\n                        serviceOracle.tolerance,\n                    )\n                    rt.appendChild(oracleNode)\n                    serviceTest.appendChild(rt)\n                }\n\n                // read values of all mandatory registers\n                packets\n                    ?.filter(\n                        p =>\n                            !p.optional &&\n                            !p.client &&\n                            isRegister(p) &&\n                            !isReading(p) &&\n                            p.identifier !== SystemReg.StreamingInterval &&\n                            p.identifier !== SystemReg.StreamingSamples,\n                    )\n                    ?.map(\n                        p =>\n                            new RegisterTest(\n                                `${p.name} has value`,\n                                undefined,\n                                p.identifier,\n                                node => {\n                                    const { register } = node\n                                    const { unpackedValue = [] } = register\n                                    if (unpackedValue?.length > 0)\n                                        return TestState.Pass\n                                    register.scheduleRefresh()\n                                    return TestState.Running\n                                },\n                            ),\n                    )\n                    ?.forEach(node => serviceTest.appendChild(node))\n\n                // import additional test nodes\n                const testNodes = [\n                    ...((!disableBuiltinRules &&\n                        resolveTestRules(serviceClass)) ||\n                        []),\n                    ...(service.rules || []),\n                ]\n                    .filter(rule => !factory || rule.factory)\n                    .map(rule => compileTestRule(specification, rule))\n                    .filter(r => !!r)\n                testNodes?.forEach(testRule =>\n                    serviceTest.appendChild(testRule),\n                )\n\n                // import member tests\n                const testCommand = resolveServiceCommandTest(serviceClass)\n                if (testCommand)\n                    serviceTest.appendChild(new ServiceCommandTest(testCommand))\n            }\n            deviceTest.appendChild(serviceTest)\n        }\n    }\n    return deviceTest\n}\n\nexport function createPanelTest(bus: JDBus, panel: PanelTestSpec) {\n    const { id, devices = [], oracles = [] } = panel\n    const panelTest = new PanelTest(id, panel)\n\n    // add oracles\n    for (const oracle of oracles) {\n        const { serviceClass, deviceId, serviceIndex, tolerance } = oracle\n        const oracleNode = new RegisterOracle(\n            `oracle for ${serviceName(serviceClass)}`,\n            deviceId,\n            serviceIndex,\n            serviceClass,\n            tolerance,\n        )\n        panelTest.appendChild(oracleNode)\n    }\n\n    // add devices\n    for (const device of devices) {\n        const { count = 1 } = device\n        for (let i = 0; i < count; ++i) {\n            const deviceTest = createDeviceTest(bus, device, panel?.oracles)\n            panelTest.appendChild(deviceTest)\n        }\n    }\n    return panelTest\n}\n","import { Grid, TextField, Typography } from \"@mui/material\"\nimport React, { ChangeEvent, useEffect } from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport {\n    DEVICE_TEST_KIND,\n    TestNode,\n} from \"../../../jacdac-ts/src/testdom/nodes\"\nimport { useId } from \"react\"\nimport { STATE_CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { TestState, TestUploadState } from \"../../../jacdac-ts/src/testdom/spec\"\nimport { getStorageItem } from \"../hooks/useStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport { JSONTryParse } from \"../../../jacdac-ts/src/jdom/utils\"\n\nconst PANEL_UPLOAD_URL = \"device-tester-post-url\"\nconst PANEL_UPLOAD_AUTH = \"device-tester-post-auth\"\nconst PANEL_UPLOAD_CUSTOM = \"device-tester-post-custom\"\n\nexport function useDeviceTestExporter(test: TestNode) {\n    const serialize = (node: TestNode) => {\n        const repo = process.env.GATSBY_GITHUB_REPOSITORY\n        const sha = process.env.GATSBY_GITHUB_SHA\n        const r: any = node.export()\n        if (repo && sha) r.jacdac = { host: window.location?.host, repo, sha }\n        return r\n    }\n\n    const handlePost = async (node: TestNode) => {\n        const url = getStorageItem<string>(\n            window.localStorage,\n            PANEL_UPLOAD_URL\n        )\n        const token = getStorageItem<string>(\n            window.localStorage,\n            PANEL_UPLOAD_AUTH\n        )\n        const custom = getStorageItem<string>(\n            window.localStorage,\n            PANEL_UPLOAD_CUSTOM\n        )\n\n        if (!url) return\n        try {\n            node.uploadState = TestUploadState.Uploading\n            const body = serialize(node)\n            if (custom) body.custom = JSONTryParse(custom)\n            console.debug(\n                `test upload: post result of ${node.id} to ${url}`,\n                body,\n                url\n            )\n            const init: RequestInit = {\n                headers: {\n                    \"content-type\": \"application/json\",\n                    authorization: token,\n                },\n                method: \"post\",\n                body: JSON.stringify(body),\n            }\n            const res = await fetch(url, init)\n            console.debug(`test upload: ${res.status}`, res)\n            if (res.status === 200) node.uploadState = TestUploadState.Uploaded\n            else node.uploadState = TestUploadState.UploadError\n        } catch (e) {\n            node.uploadState = TestUploadState.UploadError\n        }\n    }\n    useEffect(() => {\n        if (!test || !test.factory) return\n        const unsubs = []\n        const visit = (n: TestNode) => {\n            if (n.nodeKind === DEVICE_TEST_KIND)\n                unsubs.push(\n                    n.subscribe(STATE_CHANGE, () => {\n                        if (\n                            n.uploadState == TestUploadState.Local &&\n                            (n.state === TestState.Fail ||\n                                n.state === TestState.Pass)\n                        )\n                            handlePost(n)\n                    })\n                )\n            n.children?.forEach(visit)\n        }\n        visit(test)\n        return () => unsubs.forEach(u => u())\n    }, [test, test?.factory])\n}\n\nexport default function DeviceTestExporter() {\n    const urlId = useId()\n    const tokenId = urlId + \"-token\"\n    const [url, setUrl] = useLocalStorage<string>(PANEL_UPLOAD_URL, \"\")\n    const [token, setToken] = useLocalStorage<string>(PANEL_UPLOAD_AUTH, \"\")\n    const [custom, setCustom] = useLocalStorage<string>(PANEL_UPLOAD_CUSTOM, \"\")\n    const urlError =\n        !!url && !/https?:\\/\\//i.test(url)\n            ? \"URL must start with https://\"\n            : undefined\n\n    const handleUrlChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setUrl(ev.target.value?.trim() || \"\")\n    }\n    const handleTokenChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setToken(ev.target.value)\n    }\n\n    return (\n        <Grid sx={{ mt: 0.5 }} container spacing={1}>\n            <Grid item xs>\n                <TextField\n                    id={urlId}\n                    label={\"Upload url\"}\n                    value={url}\n                    size=\"small\"\n                    onChange={handleUrlChange}\n                    fullWidth={true}\n                    helperText={\n                        urlError ||\n                        \"URL to POST test result as JSON once failed or passed.\"\n                    }\n                    error={!!urlError}\n                />\n            </Grid>\n            <Grid item>\n                <TextField\n                    id={tokenId}\n                    label={\"Authorization header\"}\n                    value={token}\n                    size=\"small\"\n                    onChange={handleTokenChange}\n                    helperText={\n                        \"Optional Authorization header content (i.e. token)\"\n                    }\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <HighlightTextField\n                    code={custom}\n                    language=\"json\"\n                    onChange={setCustom}\n                    minHeight=\"5em\"\n                />\n                <Typography variant=\"caption\">\n                    Custom JSON to be added to the result upload. \n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\"\nimport HourglassEmptyIcon from \"@mui/icons-material/HourglassEmpty\"\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\"\nimport ErrorIcon from \"@mui/icons-material/Error\"\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\"\nimport useChange from \"../../jacdac/useChange\"\nimport { TestNode } from \"../../../jacdac-ts/src/testdom/nodes\"\nimport { TestState } from \"../../../jacdac-ts/src/testdom/spec\"\n\nexport default function TestStateIcon(props: { node: TestNode }) {\n    const { node } = props\n    const state = useChange(node, _ => _?.state)\n    switch (state) {\n        case TestState.Running:\n            return (\n                <HourglassEmptyIcon aria-label=\"test running\" color=\"action\" />\n            )\n        case TestState.Fail:\n            return <ErrorIcon aria-label=\"test fail\" color=\"error\" />\n        case TestState.Pass:\n            return <CheckCircleIcon aria-label=\"test pass\" color=\"success\" />\n        default:\n            return (\n                <QuestionMarkIcon\n                    aria-label=\"test indeterminate\"\n                    color=\"warning\"\n                />\n            )\n    }\n}\n","import React, { createElement, useState } from \"react\"\nimport {\n    TestNode,\n    DeviceTest,\n    DEVICE_TEST_KIND,\n    RegisterTest,\n    ServiceTest,\n    REGISTER_ORACLE_KIND,\n    SERVICE_TEST_KIND,\n} from \"../../../jacdac-ts/src/testdom/nodes\"\nimport { styled } from \"@mui/material/styles\"\nimport clsx from \"clsx\"\nimport { TreeView } from \"@mui/lab\"\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\"\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\"\nimport StyledTreeItem, { StyledTreeViewItemProps } from \"../ui/StyledTreeItem\"\nimport useChange from \"../../jacdac/useChange\"\nimport AnnounceFlagsTreeItem from \"../devices/AnnounceFlagsTreeItem\"\nimport { RegisterTreeItem } from \"../tools/JDomTreeViewItems\"\nimport DashboardServiceWidget from \"../dashboard/DashboardServiceWidget\"\nimport TestStateIcon from \"./TestStateIcon\"\nimport PanToolIcon from \"@mui/icons-material/PanTool\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport { TestState } from \"../../../jacdac-ts/src/testdom/spec\"\nconst PREFIX = \"TestTreeView\"\nconst classes = {\n    root: `${PREFIX}root`,\n    margins: `${PREFIX}margins`,\n}\nconst StyledTreeView = styled(TreeView)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        flexGrow: 1,\n    },\n\n    [`&.${classes.margins}`]: {\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n    },\n}))\n\nconst testComponents = {\n    [DEVICE_TEST_KIND]: DeviceTestTreeItemExtra,\n    [SERVICE_TEST_KIND]: ServiceTestTreeItemExtra,\n    [REGISTER_ORACLE_KIND]: RegisterOracleTestTreeItemExtra,\n}\n\ninterface TestNodeProps {\n    node: TestNode\n    showTwins?: boolean\n}\n\nfunction TestTreeItem(props: TestNodeProps) {\n    const { node, showTwins, ...rest } = props\n    const { id, nodeKind, children: nodeChildren } = node\n    const label = useChange(node, _ => _?.label)\n    const info = useChange(node, _ => _?.info)\n    const output = useChange(node, _ => _?.output)\n    const factory = useChange(node, _ => _?.factory)\n    const description = useChange(node, _ => _?.description)\n    const manualSteps = useChange(node, _ => _?.manualSteps)\n    const state = useChange(node, _ => _?.state)\n    const { prepare: prepareStep, validate: validateStep } = manualSteps || {}\n\n    const testComponent = testComponents[nodeKind]\n    const testNode = testComponent ? createElement(testComponent, props) : null\n\n    const handlePrepared = () => node.prepared()\n    const handlePass = () => (node.state = TestState.Pass)\n    const handleFail = () => (node.state = TestState.Fail)\n\n    return (\n        <StyledTreeItem\n            nodeId={id}\n            labelText={label}\n            labelInfo={info}\n            icon={<TestStateIcon node={node} />}\n            {...rest}\n        >\n            {testNode}\n            {description && (\n                <StyledTreeItem\n                    nodeId={id + \":descr\"}\n                    labelText={description}\n                    labelTextVariant=\"caption\"\n                />\n            )}\n            {prepareStep &&\n                (state === TestState.Indeterminate ||\n                    state === TestState.Fail) && (\n                    <StyledTreeItem\n                        nodeId={id + \":manual:prepare\"}\n                        labelText={prepareStep}\n                        icon={<PanToolIcon fontSize=\"small\" color=\"warning\" />}\n                        actions={\n                            !factory ? (\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"warning\"\n                                    onClick={handlePrepared}\n                                >\n                                    Test\n                                </Button>\n                            ) : undefined\n                        }\n                    />\n                )}\n            {validateStep && state === TestState.Running && (\n                <StyledTreeItem\n                    nodeId={id + \":manual:validate\"}\n                    labelText={validateStep}\n                    icon={<PanToolIcon fontSize=\"small\" color=\"warning\" />}\n                    actions={\n                        !factory ? (\n                            <>\n                                <Button\n                                    sx={{ marginRight: 0.5 }}\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                    onClick={handlePass}\n                                >\n                                    Pass\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"error\"\n                                    onClick={handleFail}\n                                >\n                                    Fail\n                                </Button>{\" \"}\n                            </>\n                        ) : undefined\n                    }\n                />\n            )}\n            {output && (\n                <StyledTreeItem nodeId={id + \":output\"} labelText={output} />\n            )}\n            {nodeChildren?.map(child => (\n                <TestTreeItem\n                    key={child.id}\n                    node={child}\n                    showTwins={showTwins}\n                    {...rest}\n                />\n            ))}\n        </StyledTreeItem>\n    )\n}\n\nfunction DeviceTestTreeItemExtra(\n    props: TestNodeProps & StyledTreeViewItemProps\n) {\n    const { node, ...rest } = props\n    const { device } = node as DeviceTest\n    if (!device) return null\n    return (\n        <AnnounceFlagsTreeItem device={device} showIdentify={true} {...rest} />\n    )\n}\n\nfunction ServiceTestTreeItemExtra(\n    props: TestNodeProps & StyledTreeViewItemProps\n) {\n    const { node, showTwins } = props\n    const { service } = node as ServiceTest\n    if (!service || !showTwins) return null\n    return (\n        <DashboardServiceWidget\n            service={service}\n            expanded={false}\n            visible={true}\n        />\n    )\n}\n\nfunction RegisterOracleTestTreeItemExtra(\n    props: TestNodeProps & StyledTreeViewItemProps\n) {\n    const { node, ...rest } = props\n    const { register } = node as RegisterTest\n    if (!register) return null\n    return <RegisterTreeItem register={register} {...rest} />\n}\n\nexport default function TestTreeView(props: {\n    test: TestNode\n    showTwins?: boolean\n    skipPanel?: boolean\n    defaultExpanded?: boolean\n}) {\n    const {\n        test: panel,\n        skipPanel,\n        defaultExpanded,\n        showTwins,\n        ...rest\n    } = props\n    const [expanded, setExpanded] = useState<string[]>(\n        defaultExpanded ? panel.children.map(d => d.id) : []\n    )\n    const [selected, setSelected] = useState<string[]>([])\n    const handleToggle = (\n        event: React.ChangeEvent<unknown>,\n        nodeIds: string[]\n    ) => {\n        setExpanded(nodeIds)\n    }\n\n    const handleSelect = (\n        event: React.ChangeEvent<unknown>,\n        nodeIds: string[]\n    ) => {\n        setSelected(nodeIds)\n    }\n\n    return (\n        <StyledTreeView\n            className={clsx(classes.root, classes.margins)}\n            defaultCollapseIcon={<ArrowDropDownIcon />}\n            defaultExpandIcon={<ArrowRightIcon />}\n            defaultEndIcon={<div style={{ width: 12 }} />}\n            expanded={expanded}\n            selected={selected}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n        >\n            {skipPanel ? (\n                panel.children.map(child => (\n                    <TestTreeItem\n                        key={child.id}\n                        node={child}\n                        showTwins={showTwins}\n                        {...rest}\n                    />\n                ))\n            ) : (\n                <TestTreeItem node={panel} showTwins={showTwins} {...rest} />\n            )}\n        </StyledTreeView>\n    )\n}\n","import { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    SRV_BOOTLOADER,\n    SRV_BRIDGE,\n    SRV_CONTROL,\n    SRV_DASHBOARD,\n    SRV_DC_CURRENT_MEASUREMENT,\n    SRV_DC_VOLTAGE_MEASUREMENT,\n    SRV_INFRASTRUCTURE,\n    SRV_DEVICE_SCRIPT_CONDITION,\n    SRV_LOGGER,\n    SRV_POWER_SUPPLY,\n    SRV_PROTO_TEST,\n    SRV_PROXY,\n    SRV_RELAY,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n    SRV_UNIQUE_BRAIN,\n} from \"../../../jacdac-ts/src/jdom/constants\"\n\nconst ignoredDevices = [\n    SRV_UNIQUE_BRAIN,\n    SRV_DASHBOARD,\n    SRV_BRIDGE,\n    SRV_INFRASTRUCTURE,\n    SRV_PROXY,\n]\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_ROLE_MANAGER,\n    SRV_LOGGER,\n    SRV_SETTINGS,\n    SRV_BOOTLOADER,\n    SRV_PROTO_TEST,\n    SRV_INFRASTRUCTURE,\n    SRV_PROXY,\n    SRV_UNIQUE_BRAIN,\n    SRV_DASHBOARD,\n    SRV_BRIDGE,\n    SRV_DEVICE_SCRIPT_CONDITION,\n]\n\nexport function isModuleTester(device: JDDevice) {\n    return (\n        device.announced &&\n        device.hasService(SRV_POWER_SUPPLY) &&\n        device.hasService(SRV_DC_CURRENT_MEASUREMENT) &&\n        device.hasService(SRV_DC_VOLTAGE_MEASUREMENT) &&\n        device.hasService(SRV_RELAY)\n    )\n}\n\nexport function filterTestDevice(device: JDDevice) {\n    // module tester\n    if (isModuleTester(device)) return false\n\n    return !ignoredDevices.some(sc => device.hasService(sc))\n}\n\nexport function filterTestService(serviceClass: number) {\n    return ignoredServices.indexOf(serviceClass) < 0\n}\n","import { useState, useMemo, useLayoutEffect } from \"react\";\n\nvar m = {\n  characterData: !0,\n  characterDataOldValue: !0,\n  childList: !0,\n  subtree: !0\n};\n\nfunction p(c) {\n  var a = window.getSelection();\n  a.empty();\n  a.addRange(c);\n}\n\nfunction q(c) {\n  return (c.metaKey || c.ctrlKey) && !c.altKey && \"KeyZ\" === c.code;\n}\n\nfunction r(c) {\n  c = [ c.firstChild ];\n  for (var b, a = \"\"; b = c.pop(); ) {\n    b.nodeType === Node.TEXT_NODE ? a += b.textContent : b.nodeType === Node.ELEMENT_NODE && \"BR\" === b.nodeName && (a += \"\\n\"), \n    b.nextSibling && c.push(b.nextSibling), b.firstChild && c.push(b.firstChild);\n  }\n  \"\\n\" !== a[a.length - 1] && (a += \"\\n\");\n  return a;\n}\n\nfunction w(c) {\n  var a = window.getSelection().getRangeAt(0), b = a.collapsed ? 0 : a.toString().length, f = document.createRange();\n  f.setStart(c, 0);\n  f.setEnd(a.startContainer, a.startOffset);\n  return {\n    position: c = (f = f.toString()).length,\n    extent: b,\n    content: f = (f = f.split(\"\\n\"))[a = f.length - 1],\n    line: a\n  };\n}\n\nfunction C(c, a, b) {\n  0 >= a && (a = 0);\n  if (!b || 0 > b) {\n    b = a;\n  }\n  var f = document.createRange();\n  c = [ c.firstChild ];\n  for (var d, l = 0, g = a; d = c[c.length - 1]; ) {\n    if (d.nodeType === Node.TEXT_NODE) {\n      if (l + d.textContent.length >= g) {\n        var h = g - l;\n        if (g === a) {\n          if (g = f, h < d.textContent.length ? g.setStart(d, h) : g.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          h < (b = d).textContent.length ? a.setEnd(b, h) : a.setEndAfter(b);\n          break;\n        }\n      }\n      l += d.textContent.length;\n    } else if (d.nodeType === Node.ELEMENT_NODE && \"BR\" === d.nodeName) {\n      if (l + 1 >= g) {\n        if (g === a) {\n          if (h = f, 0 < d.textContent.length ? h.setStart(d, 0) : h.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          0 < (b = d).textContent.length ? a.setEnd(b, 0) : a.setEndAfter(b);\n          break;\n        }\n      }\n      l++;\n    }\n    c.pop();\n    d.nextSibling && c.push(d.nextSibling);\n    d.firstChild && c.push(d.firstChild);\n  }\n  return f;\n}\n\nexport function useEditable(c, a, b) {\n  function f(k) {\n    var b = c.current;\n    if (b) {\n      var a = w(b);\n      b = r(b);\n      a.position += k.length - b.length;\n      e.position = a;\n      e.onChange(k, a);\n    }\n  }\n  function l(k, b) {\n    var e = c.current;\n    if (e) {\n      var a = window.getSelection().getRangeAt(0);\n      a.deleteContents();\n      a.collapse();\n      var d = b || 0;\n      (a = C(e, b = (a = w(e)).position + (0 > d ? d : 0), a.position + (0 < d ? d : 0))).deleteContents();\n      k && a.insertNode(document.createTextNode(k));\n      p(C(e, b + k.length));\n    }\n  }\n  function d(b) {\n    var a = c.current;\n    if (a) {\n      a.focus();\n      var e = 0;\n      if (\"number\" == typeof b) {\n        e = b;\n      } else {\n        var k = r(a).split(\"\\n\").slice(0, b.row);\n        b.row && (e += k.join(\"\\n\").length + 1);\n        e += b.column;\n      }\n      p(C(a, e));\n    }\n  }\n  function g() {\n    var b = c.current;\n    return {\n      text: r(b),\n      position: b = w(b)\n    };\n  }\n  function h() {\n    e.observer.disconnect();\n  }\n  b || (b = {});\n  var D = useState([])[1], e = useState((function() {\n    var e = {\n      observer: null,\n      disconnected: !1,\n      onChange: a,\n      queue: [],\n      history: [],\n      historyAt: -1,\n      position: null\n    };\n    \"undefined\" != typeof MutationObserver && (e.observer = new MutationObserver((function b(b) {\n      var a;\n      (a = e.queue).push.apply(a, b);\n    })));\n    return e;\n  }))[0], n = useMemo((function() {\n    return {\n      update: f,\n      insert: l,\n      move: d,\n      getState: g\n    };\n  }), []);\n  if (\"object\" != typeof navigator) {\n    return n;\n  }\n  useLayoutEffect((function() {\n    e.onChange = a;\n    if (c.current && !b.disabled) {\n      e.disconnected = !1;\n      e.observer.observe(c.current, m);\n      if (e.position) {\n        var k = e.position, d = k.position;\n        p(C(c.current, d, d + k.extent));\n      }\n      return h;\n    }\n  }));\n  useLayoutEffect((function() {\n    if (!c.current || b.disabled) {\n      e.history.length = 0, e.historyAt = -1;\n    } else {\n      var a = c.current;\n      if (e.position) {\n        a.focus();\n        var d = e.position, f = d.position;\n        p(C(a, f, f + d.extent));\n      }\n      var g = a.style.whiteSpace, h = a.contentEditable, l = !0;\n      try {\n        a.contentEditable = \"plaintext-only\";\n      } catch (u) {\n        a.contentEditable = \"true\", l = !1;\n      }\n      \"pre\" !== g && (a.style.whiteSpace = \"pre-wrap\");\n      b.indentation && (a.style.tabSize = a.style.MozTabSize = \"\" + b.indentation);\n      d = \"\" + \" \".repeat(b.indentation || 0);\n      var x, E = new RegExp(\"^(?:\" + d + \")\"), F = new RegExp(\"^(?:\" + d + \")*(\" + d + \")$\"), t = function(b) {\n        if (c.current && e.position) {\n          var u = r(a), d = w(a), f = (new Date).valueOf(), g = e.history[e.historyAt];\n          !b && 500 > f - x || g && g[1] === u ? x = f : (b = ++e.historyAt, e.history[b] = [ d, u ], \n          e.history.splice(b + 1), 500 < b && (e.historyAt--, e.history.shift()));\n        }\n      }, v = function() {\n        var b;\n        (b = e.queue).push.apply(b, e.observer.takeRecords());\n        b = w(a);\n        if (e.queue.length) {\n          e.observer.disconnect();\n          e.disconnected = !0;\n          var d = r(a);\n          e.position = b;\n          for (var c, f; c = e.queue.pop(); ) {\n            null !== c.oldValue && (c.target.textContent = c.oldValue);\n            for (f = c.removedNodes.length - 1; 0 <= f; f--) {\n              c.target.insertBefore(c.removedNodes[f], c.nextSibling);\n            }\n            for (f = c.addedNodes.length - 1; 0 <= f; f--) {\n              c.addedNodes[f].parentNode && c.target.removeChild(c.addedNodes[f]);\n            }\n          }\n          e.onChange(d, b);\n        }\n      }, y = function(c) {\n        if (!c.defaultPrevented && c.target === a) {\n          if (e.disconnected) {\n            return c.preventDefault(), D([]);\n          }\n          if (q(c)) {\n            c.preventDefault(), c.shiftKey ? (c = ++e.historyAt, (c = e.history[c]) || (e.historyAt = e.history.length - 1)) : (c = --e.historyAt, \n            (c = e.history[c]) || (e.historyAt = 0)), c && (e.observer.disconnect(), e.disconnected = !0, \n            e.position = c[0], e.onChange(c[1], c[0]));\n          } else {\n            t();\n            if (\"Enter\" === c.key) {\n              c.preventDefault();\n              var d = w(a), f = /\\S/g.exec(d.content);\n              d = \"\\n\" + d.content.slice(0, f ? f.index : d.content.length);\n              n.insert(d);\n            } else if ((!l || b.indentation) && \"Backspace\" === c.key) {\n              c.preventDefault(), window.getSelection().getRangeAt(0).collapsed ? (d = w(a), d = F.exec(d.content), \n              n.insert(\"\", d ? -d[1].length : -1)) : n.insert(\"\", 0);\n            } else if (b.indentation && \"Tab\" === c.key) {\n              c.preventDefault();\n              f = (d = w(a)).position - d.content.length;\n              var g = r(a);\n              d = c.shiftKey ? g.slice(0, f) + d.content.replace(E, \"\") + g.slice(f + d.content.length) : g.slice(0, f) + (b.indentation ? \" \".repeat(b.indentation) : \"\\t\") + g.slice(f);\n              n.update(d);\n            }\n            c.repeat && v();\n          }\n        }\n      }, z = function(b) {\n        b.defaultPrevented || b.isComposing || (q(b) || t(), v(), a.focus());\n      }, A = function(b) {\n        e.position = window.getSelection().rangeCount && b.target === a ? w(a) : null;\n      }, B = function(a) {\n        a.preventDefault();\n        t(!0);\n        n.insert(a.clipboardData.getData(\"text/plain\"));\n        t(!0);\n        v();\n      };\n      document.addEventListener(\"selectstart\", A);\n      window.addEventListener(\"keydown\", y);\n      a.addEventListener(\"paste\", B);\n      a.addEventListener(\"keyup\", z);\n      return function() {\n        document.removeEventListener(\"selectstart\", A);\n        window.removeEventListener(\"keydown\", y);\n        a.removeEventListener(\"paste\", B);\n        a.removeEventListener(\"keyup\", z);\n        a.style.whiteSpace = g;\n        a.contentEditable = h;\n      };\n    }\n  }), [ c.current, b.disabled, b.indentation ]);\n  return n;\n}\n//# sourceMappingURL=use-editable.es.js.map\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react/jsx-key */\nimport React, { useContext, useRef, lazy } from \"react\"\nimport Highlight, {\n    defaultProps,\n    Language,\n    PrismTheme,\n} from \"prism-react-renderer\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport LIGHT_THEME from \"prism-react-renderer/themes/vsLight\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DARK_THEME from \"prism-react-renderer/themes/vsDark\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useEditable } from \"use-editable\"\nimport { Alert } from \"@mui/material\"\nimport { Grid, Tooltip } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport Suspense from \"../ui/Suspense\"\nconst GithubPullRequestButton = lazy(\n    () => import(\"../buttons/GithubPullRequestButton\")\n)\n\nconst AnnotationTooltip = styled(Tooltip)(({ theme }) => ({\n    [`& .arrow`]: {\n        color: theme.palette.error.main,\n    },\n    [`& .tooltip`]: {\n        backgroundColor: theme.palette.error.main,\n        color: theme.palette.common.white,\n        boxShadow: theme.shadows[1],\n        fontSize: theme.typography.body2.fontSize,\n    },\n}))\n\nexport default function HighlightTextField(props: {\n    language: string\n    code: string\n    minHeight?: string\n    maxHeight?: string\n    onChange: (newValue: string) => void\n    annotations?: jdspec.Diagnostic[]\n    pullRequestTitle?: string\n    pullRequestPath?: string\n    pullRequestDescription?: string\n    disabled?: boolean\n}) {\n    const {\n        code,\n        onChange,\n        language,\n        annotations,\n        pullRequestTitle,\n        pullRequestPath,\n        pullRequestDescription,\n        minHeight = \"12rem\",\n        maxHeight,\n        disabled,\n    } = props\n    const { darkMode } = useContext(DarkModeContext)\n    const theme = (darkMode === \"dark\" ? DARK_THEME : LIGHT_THEME) as PrismTheme\n    const editorRef = useRef(null)\n\n    useEditable(editorRef, onChange, {\n        disabled: !!disabled,\n        indentation: 4,\n    })\n    return (\n        <Grid container spacing={1} direction=\"row\">\n            <Grid item xs={12}>\n                <Highlight\n                    {...defaultProps}\n                    code={code}\n                    language={language as Language}\n                    theme={theme}\n                >\n                    {({ className, style, tokens, getTokenProps }) => (\n                        <pre\n                            ref={editorRef}\n                            className={className}\n                            spellCheck={false}\n                            style={{\n                                ...style,\n                                padding: \"0.5rem\",\n                                minHeight,\n                                maxHeight,\n                                whiteSpace: \"pre-wrap\",\n                                overflowWrap: \"break-word\",\n                            }}\n                        >\n                            {tokens.map((line, i) => {\n                                const annotation = annotations?.find(\n                                    a => a.line === i + 1\n                                )\n                                const title = annotation?.message\n                                const el = (\n                                    <span\n                                        key={i}\n                                        style={\n                                            annotation && {\n                                                borderBottom: \"dashed 1px red\",\n                                            }\n                                        }\n                                    >\n                                        {line\n                                            .filter(token => !token.empty)\n                                            .map((token, key) => (\n                                                <span\n                                                    {...getTokenProps({\n                                                        token,\n                                                        key,\n                                                    })}\n                                                />\n                                            ))}\n                                        {i < tokens.length - 1 ? \"\\n\" : null}\n                                    </span>\n                                )\n                                return title ? (\n                                    <AnnotationTooltip\n                                        title={title}\n                                        arrow\n                                        key={i}\n                                    >\n                                        {el}\n                                    </AnnotationTooltip>\n                                ) : (\n                                    el\n                                )\n                            })}\n                        </pre>\n                    )}\n                </Highlight>\n            </Grid>\n            {!!annotations?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"error\">\n                        {annotations.length === 1 ? (\n                            <>\n                                line {annotations[0].line}:{\" \"}\n                                {annotations[0].message}\n                            </>\n                        ) : (\n                            <ul>\n                                {annotations.map((a, i) => (\n                                    <li key={i}>\n                                        line {a.line}: {a.message}\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                    </Alert>\n                </Grid>\n            )}\n            {pullRequestTitle && pullRequestPath && (\n                <Grid item>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            title={pullRequestTitle}\n                            head={pullRequestPath}\n                            description={pullRequestDescription}\n                            files={{\n                                [pullRequestPath + \".md\"]: code,\n                            }}\n                        />\n                    </Suspense>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["name","ruleName","steps","prettyDuration","intensity","value","start","test","mounted","work","service","intensityRegister","valueRegister","k","step","delay","TestState","samples","tol","isNaN","tolerance","opf","Math","a","b","op","count","seen","incorrect","register","active","current","logger","type","threshold","oracleRegister","node","registerId","SystemReg","registerSpec","specification","pkt","isRegister","createReadingRule","isEvent","createEventRule","createSetIntensityAndValueRule","createReadingTest","createEventTest","json","JSONTryParse","Array","d","o","oracle","parseIdentifier","device","spec","serviceSpecificationFromName","console","BaseReg","unpackedValue","vendorCode","code","SystemStatusCodes","ok","deviceCatalog","deviceTest","controlTest","createStatusCodeTest","ControlReg","services","srv","serviceClass","serviceOracle","oracles","serviceSpecificationFromClassIdentifier","i","serviceTest","packets","readingSpec","readingOptional","rt","createOracleRule","oracleNode","p","isReading","testNodes","resolveTestRules","rule","compileTestRule","r","testRule","testCommand","resolveServiceCommandTest","devices","panelTest","serviceName","createDeviceTest","panel","PANEL_UPLOAD_URL","PANEL_UPLOAD_AUTH","PANEL_UPLOAD_CUSTOM","serialize","repo","process","sha","host","window","handlePost","url","getStorageItem","token","custom","TestUploadState","body","init","headers","authorization","method","JSON","res","fetch","useEffect","unsubs","visit","n","u","urlId","useId","tokenId","useLocalStorage","urlError","handleUrlChange","ev","setUrl","handleTokenChange","setToken","mt","state","useChange","_","PREFIX","classes","root","margins","StyledTreeView","styled","flexGrow","marginLeft","theme","marginRight","testComponents","rest","children","label","info","output","factory","description","manualSteps","prepare","validate","testComponent","testNode","createElement","handlePrepared","handlePass","handleFail","id","prepareStep","validateStep","nodeChildren","child","useState","defaultExpanded","handleToggle","setExpanded","handleSelect","setSelected","clsx","width","skipPanel","ignoredDevices","ignoredServices","isModuleTester","sc","GithubPullRequestButton","lazy","AnnotationTooltip","color","backgroundColor","boxShadow","fontSize","minHeight","useContext","darkMode","editorRef","useRef","useEditable","disabled","indentation","padding","whiteSpace","overflowWrap","tokens","annotation","annotations","title","el","borderBottom","line","getTokenProps","pullRequestTitle","pullRequestPath"],"sourceRoot":""}