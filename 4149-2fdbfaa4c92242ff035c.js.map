{"version":3,"file":"4149-2fdbfaa4c92242ff035c.js","mappings":"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A,CAAC,KAAK,8BAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC,6BAA6B,8BAAQ;AACtC;AACA,CAAC;AACD;AACA,EAAE;AACF;AACA,CAAC;AACD,kBAAkB,0BAAM;AACxB;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uBAAuB,0BAAM,CAAC,MAAM;AACpC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,8BAA8B,cAAc;AAC5C,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,4BAA4B,gBAAgB;AAC5C,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,YAAY,+CAA6B;AACzC;;AAEA;AACA,2BAA2B,8BAAQ,GAAG;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,4BAA4B,mBAAI,YAAY,8BAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ,4BAA4B,mBAAI;AAChC;AACA,KAAK;AACL;AACA,sBAAsB,mBAAI,aAAa,8BAAQ;AAC/C;AACA;AACA,eAAe,yBAAI;AACnB;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAuDvC,CAAC;AACF,kDAAe,MAAM;;AC1OrB,GAAMC,CAAAA,MAAM,CAAZ,cACA,GAAMC,CAAAA,OAAO,CAAG,CACZC,GAAG,CAAKF,MAAL,CADS,MAEZG,KAAK,CAAKH,MAAL,CAFO,QAGZI,OAAO,CAAKJ,MAAL,CAHK,UAIZK,KAAK,CAAKL,MAAL,CAJT,OAAgB,CAAhB,CAOA,GAAMM,CAAAA,YAAY,CAAGC,0BAAM,CAANA,MAAM,CAANA,CAAe,UAAC,CAAD,KAAC,EAAD,WAAgB,CAChD,OAAON,OAAO,CAAd,KAAuB,CACnBO,SAAS,CAFmC,KACzB,CADyB,CAKhD,OAAOP,OAAO,CAAd,OAAyB,CACrBQ,KAAK,CAAEC,KAAK,CAALA,OAAAA,CADc,CACdA,CADc,CAErBC,MAAM,CAAED,KAAK,CAALA,OAAAA,CAFa,CAEbA,CAFa,CAGrBE,WAAW,CAAEF,KAAK,CAALA,OAAAA,CAR+B,GAQ/BA,CAHQ,CALuB,CAWhD,OAAOT,OAAO,CAAd,SAA2B,CACvBQ,KAAK,CAAEC,KAAK,CAALA,OAAAA,CADgB,CAChBA,CADgB,CAEvBC,MAAM,CAAED,KAAK,CAALA,OAAAA,CAFe,CAEfA,CAFe,CAGvBE,WAAW,CAAEF,KAAK,CAALA,OAAAA,CAd+B,GAc/BA,CAHU,CAXqB,CAiBhD,OAAOT,OAAO,CAAd,OAAyB,CACrBQ,KAAK,CAAEC,KAAK,CAALA,OAAAA,CADc,CACdA,CADc,CAErBC,MAAM,CAAED,KAAK,CAALA,OAAAA,CAFa,CAEbA,CAFa,CAGrBE,WAAW,CAAEF,KAAK,CAALA,OAAAA,CApBe,CAoBfA,CAHQ,CAjBuB,CAAhB,CAApC,CAAqBH,CAArB,CAwBe,2BAKZ,CACC,GAAM,sBAAN,MAEA,GAAMM,CAAAA,aAAa,CACf3C,IAAI,GAAJA,OAAAA,CACM+B,OAAO,CADb/B,KAAAA,CAEMA,IAAI,GAAJA,OAAAA,CACA+B,OAAO,CADP/B,KAAAA,CAEA+B,OAAO,CALjB,QAMA,mBACI,mDACI,mCACI,SAAS,CADb,cAEI,GAAG,CAFP,IAGI,GAAG,CAHP,IAII,OAAO,CAAE,CACLC,GAAG,CAAEY,MAAM,CAAGb,OAAO,CAAV,IAP3B,SAMqB,CAJb,EADJ,CADJ,CAYH;;;;;;;;;;;;;ACzDc,2CAAsD,CACjE,GAAMc,CAAAA,GAAG,CAAGC,kFAAW,CAACzB,MAAD,OAACA,EAAAA,MAAD,SAACA,CAAD,MAACA,CAAAA,MAAM,CAANA,OAAAA,CAAD,CAACA,CAAD,CAAqB0B,gIAArB,CAAvB,CACA,GAAM,KAAOC,qFAAwB,CAArC,GAAqC,CAArC,CACA,UACH;;;;;;;;;;;;;;;ACJc,uCAAkD,CAC7D,GAAMC,CAAAA,EAAE,CAAGC,gFAA0B,CAArC,MAAqC,CAArC,CACA,MAAOC,CAAAA,2CAA2C,CAAlD,EAAkD,CAAlD,CAGJ,CAAO,wDAAiE,CACpE,GAAMC,CAAAA,aAAa,CAAGjD,yFAAtB,GACA,GAAMd,CAAAA,aAAa,CAAGgB,+DAAS,eAE3BC,CAAC,EAAIA,CAAC,CAADA,kCAAAA,CAFsB,EAEtBA,CAFsB,CAG3B,CAHJ,EAGI,CAH2B,CAA/B,CAKA,qBAGJ,CAAO,iDAA0D,CAC7D,GAAM8C,CAAAA,aAAa,CAAGjD,yFAAtB,GACA,GAAMd,CAAAA,aAAa,CAAGgB,+DAAS,eAE3BC,CAAC,EAAIA,CAAC,CAADA,2BAAAA,CAFsB,EAEtBA,CAFsB,CAG3B,CAHJ,EAGI,CAH2B,CAA/B,CAKA,qBACH;;;;;;;;;;;;;;;;;ACVD,mEAKK,CACD,GAAI,CACA,GAAM+C,CAAAA,KAAK,CAAGC,MAAM,CAApB,QAAoB,CAApB,CACA,aACF,SAAU,gEACRC,UAAU,GAAI,CACVC,GAAG,CAAEC,QAAF,OAAEA,EAAAA,QAAF,SAAEA,CAAF,MAAEA,CAAF,mBAAEA,QAAQ,CAAV,0EAAEA,iBAAAA,CAAF,sDAAEA,qBAAAA,CADK,mBAEVC,GAAG,CAAED,QAAF,OAAEA,EAAAA,QAAF,SAAEA,CAAF,MAAEA,CAAF,oBAAEA,QAAQ,CAAV,oDAAEA,kBAAAA,CAFK,KAGVZ,GAAG,CAAEY,QAAF,OAAEA,EAAAA,QAAF,SAAEA,CAAF,MAAEA,CAAAA,QAAQ,CAHjBF,IAAc,CAAJ,CAAVA,CAKA,oBAEP,CAMD,kCAAmD,CAC/C,GAAIV,GAAG,GAAKc,mGAAZ,CACI,MAAQd,CAAAA,GAAD,EAAqB,eACxB,GAAMe,CAAAA,MAAM,CAAG,IAAG,GAAH,SAAG,OAAH,aAAG,CAAH,gBAAf,GACA,GAAM,kBAAN,OACA,GAAIC,IAAI,GAAR,UAAwB,UACxB,GAAInD,CAAAA,CAAC,aAAMoD,0FAAQ,CACfC,uFAAiB,CAAjBA,IAAiB,CAAjBA,EADC,GAAc,CAAd,oCAAMD,SAAAA,CAAN,WAAMA,EAAN,SAEkBD,IAAI,CAAJA,QAAAA,CAFlB,EAEkBA,CAFlB,CAAL,IAGA,cAAgB,CACZnD,CAAC,iBAAmBmD,IAAI,CAAJA,QAAAA,CAApBnD,EAAoBmD,CAApBnD,CAEJ,UAVJ,EAaJ,GACIgD,GAAG,GAAHA,8FAAAA,EACAb,GAAG,GAAKmB,0HAFZ,CAGE,CACE,MAAQnB,CAAAA,GAAD,EAAqB,CACxB,GAAMe,CAAAA,MAAM,CAAG,IAAG,GAAH,SAAG,OAAH,aAAG,CAAH,gBAAf,GACA,GAAM,oBAAN,OACA,GAAIK,KAAK,GAAT,UAAyB,UACzB,MAAUC,CAAAA,KAAV,IAAUA,CAAV,KAAUA,CAAV,GAAUA,CAAV,MAJJ,EAQJ,kBAGJ,CAAO,gDAGG,CACN,GAAM,oBAAyBC,OAAO,EAAI,CAAEC,OAAO,CAAnD,IAA0C,CAA1C,CACA,GAAM,aAAiBC,oFAAvB,GACA,GAAMC,CAAAA,QAAQ,CAAGb,QAAQ,CACnBc,eAAe,CAACd,QAAQ,CAARA,OAAAA,CAAD,aAAgCA,QAAQ,CADpC,IACJ,CADI,CAAzB,UAIA,MAAOe,CAAAA,oEAAc,qFAEjBJ,OAAO,UAFU,UAGjB9D,CAAC,EACGmE,iBAAiB,GAEbC,EAAE,EACEJ,QAAQ,CACFA,QAAQ,CADN,EACM,CADN,CAEFK,4EAAO,CAACD,EAAD,OAACA,EAAAA,EAAD,SAACA,CAAD,MAACA,CAAAA,EAAE,CAAH,WALJ,SAKI,CALJ,OAJJ,UAII,CAJJ,CAajB,SAbJ,SAaI,CAbiB,CAArB,CAiBJ,CAAO,mDAGF,CACD,GAAM,UAAcP,OAAO,EAAI,CAAEC,OAAO,CAAxC,IAA+B,CAA/B,CACA,GAAM,aAAiBC,oFAAvB,GAEA,MAAOG,CAAAA,oEAAc,qFAEjBJ,OAAO,UAFU,UAGjB9D,CAAC,EACGmE,iBAAiB,GAEbC,EAAE,EAAK,GAAE,GAAF,QAAE,OAAF,YAAE,CAAF,gBAFM,MAJJ,UAII,CAJJ,CAUjB,CAVJ,OAUI,CAViB,CAArB,CAcJ,CAAO,+CAGI,CACP,GAAM,UAAcP,OAAO,EAAI,CAAEC,OAAO,CAAxC,IAA+B,CAA/B,CACA,MAAOI,CAAAA,oEAAc,qFAEjBJ,OAAO,UAFU,UAGjB9D,CAAC,EAAIA,CAAJ,OAAIA,EAAAA,CAAJ,SAAIA,CAAJ,MAAIA,CAAAA,CAAC,CAHW,UAIjB,CAJJ,OAII,CAJiB,CAArB,CAMH","sources":["webpack://jacdac-docs/./src/components/devices/DeviceIcon.tsx","webpack://jacdac-docs/./src/components/devices/useDeviceCatalog.ts","webpack://jacdac-docs/./src/components/devices/useDeviceImage.ts","webpack://jacdac-docs/./src/components/devices/useDeviceSpecifications.ts","webpack://jacdac-docs/./src/components/alert/DeveloperModeAlert.tsx","webpack://jacdac-docs/./src/components/dialogs/ConnectTransportDialog.tsx","webpack://jacdac-docs/./src/components/hooks/useRegister.ts","webpack://jacdac-docs/./src/components/hooks/useServiceProvider.ts","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/Person.js","webpack://jacdac-docs/./node_modules/@mui/material/Avatar/avatarClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/Avatar/Avatar.js","webpack://jacdac-docs/./src/components/tools/ImageAvatar.tsx","webpack://jacdac-docs/./src/jacdac/useDeviceProductIdentifier.ts","webpack://jacdac-docs/./src/jacdac/useDeviceSpecification.ts","webpack://jacdac-docs/./src/jacdac/useRegisterValue.ts"],"sourcesContent":["import React from \"react\"\nimport { VIRTUAL_DEVICE_NODE_NAME } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useServiceProvider from \"../hooks/useServiceProvider\"\nimport KindIcon from \"../KindIcon\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport { JDServerServiceProvider } from \"../../../jacdac-ts/src/jdom/servers/serverserviceprovider\"\nimport ImageAvatar from \"../tools/ImageAvatar\"\nimport { withPrefix } from \"gatsby\"\n\nexport default function DeviceIcon(props: {\n    device: JDDevice\n    size?: \"small\" | \"large\"\n    avatar?: boolean\n}) {\n    const { device, size, avatar } = props\n    const specification = useDeviceSpecification(device)\n    const server = useServiceProvider<JDServerServiceProvider>(device)\n    return server ? (\n        <KindIcon kind={VIRTUAL_DEVICE_NODE_NAME} />\n    ) : (\n        <DeviceSpecificationIcon\n            size={size}\n            specification={specification}\n            avatar={avatar}\n        />\n    )\n}\n\nexport function DeviceSpecificationIcon(props: {\n    specification: jdspec.DeviceSpec\n    size?: \"small\" | \"large\"\n    avatar?: boolean\n}) {\n    const { specification, size, avatar } = props\n    const imageUrl =\n        useDeviceImage(specification, \"avatar\") ||\n        withPrefix(\"images/missing-device.svg\")\n    const name = specification?.name || \"Image of the device\"\n\n    return <ImageAvatar size={size} alt={name} src={imageUrl} avatar={avatar} />\n}\n","import useBus from \"../../jacdac/useBus\"\n\n/**\n * Gets the device catalog from the current bus\n * @returns\n */\nexport default function useDeviceCatalog() {\n    const bus = useBus()\n    return bus.deviceCatalog\n}\n","import { withPrefix } from \"gatsby-link\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/catalog\"\n\nexport default function useDeviceImage(\n    specification: jdspec.DeviceSpec,\n    size: \"avatar\" | \"lazy\" | \"catalog\" | \"preview\" | \"full\" | \"list\"\n) {\n    const sz = size || \"full\"\n    return (\n        specification &&\n        withPrefix(\n            `images/devices/${identifierToUrlPath(specification.id)}.${sz}.jpg`\n        )\n    )\n}\n","import { DeviceSpecificationOptions } from \"../../../jacdac-ts/src/jdom/catalog\"\nimport { arrayEq } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useChange from \"../../jacdac/useChange\"\nimport useDeviceCatalog from \"./useDeviceCatalog\"\n\nexport default function useDeviceSpecifications(\n    options?: DeviceSpecificationOptions\n) {\n    const catalog = useDeviceCatalog()\n    const specifications = useChange(\n        catalog,\n        _ => _?.specifications(options),\n        [JSON.stringify(options)],\n        (a, b) => arrayEq(a, b, (l, r) => l.id === r.id)\n    )\n    return specifications\n}\n","import React from \"react\"\nimport { AlertTitle } from \"@mui/material\"\nimport useDeveloperMode from \"../hooks/useDeveloperMode\"\nimport Alert from \"../ui/Alert\"\nimport { Button } from \"gatsby-theme-material-ui\"\n\nexport default function DeveloperModeAlert() {\n    const { developerMode, setDeveloperMode } = useDeveloperMode()\n    const handleToggle = () => setDeveloperMode(!developerMode)\n    return (\n        !!developerMode && (\n            <Alert severity=\"info\">\n                <AlertTitle>DeveloperMode</AlertTitle>\n                Allows to connect to device that are not registered in the\n                catalog.\n                <Button variant=\"outlined\" onClick={handleToggle}>\n                    Turn Off\n                </Button>\n            </Alert>\n        )\n    )\n}\n","import { Dialog, DialogContent, Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { useId } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport { Transport } from \"../../../jacdac-ts/src/jdom/transport/transport\"\nimport DialogTitleWithClose from \"../ui/DialogTitleWithClose\"\nimport { Flags } from \"../../../jacdac-ts/src/jdom/flags\"\nimport DeveloperModeAlert from \"../alert/DeveloperModeAlert\"\nimport { DeviceSpecificationIcon } from \"../devices/DeviceIcon\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useDeveloperMode from \"../hooks/useDeveloperMode\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/catalog\"\n\nfunction ConnectTransport(props: {\n    transport: Transport\n    onClose: () => void\n}) {\n    const { transport, onClose } = props\n    const { developerMode } = useDeveloperMode()\n    const { type: transportType } = transport\n    const devices = useDeviceSpecifications({\n        transport: transportType,\n        includeExperimental: developerMode,\n        includeDeprecated: developerMode,\n    })\n    if (!devices?.length && !Flags.diagnostics) return null\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1} alignContent=\"flex-end\">\n                <Grid item alignSelf=\"center\">\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        onClick={onClose}\n                        full={true}\n                        typeInTitle={true}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Grid container spacing={1}>\n                        {devices.map(device => (\n                            <Grid item key={device.id}>\n                                <IconButtonWithTooltip\n                                    title={device.name}\n                                    to={`/devices/${identifierToUrlPath(\n                                        device.id\n                                    )}/`}\n                                    onClick={onClose}\n                                >\n                                    <DeviceSpecificationIcon\n                                        specification={device}\n                                        avatar={true}\n                                    />\n                                </IconButtonWithTooltip>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ConnectTransportDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const { open, onClose } = props\n    const dialogId = useId()\n    const labelId = dialogId + \"-label\"\n    return (\n        <Dialog\n            id={dialogId}\n            aria-labelledby={labelId}\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n        >\n            <DialogTitleWithClose onClose={onClose} id={labelId}>\n                Connect to a device\n            </DialogTitleWithClose>\n            <DialogContent>\n                <DeveloperModeAlert />\n                <Grid container spacing={2}>\n                    {transports.map(transport => (\n                        <ConnectTransport\n                            key={transport.type}\n                            transport={transport}\n                            onClose={onClose}\n                        />\n                    ))}\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import { JDService } from \"../../../jacdac-ts/src/jdom/service\"\n\nexport default function useRegister(service: JDService, identifier: number) {\n    return service?.register(identifier)\n}\n","import { JDDevice } from \"../../../jacdac-ts/src/jdom/device\"\nimport { JDServiceProvider } from \"../../../jacdac-ts/src/jdom/servers/serviceprovider\"\nimport useBus from \"../../jacdac/useBus\"\nimport useChange from \"../../jacdac/useChange\"\n\n/**\n * Mounts a service provider\n */\nexport default function useServiceProvider<\n    TServiceProvider extends JDServiceProvider\n>(device: JDDevice) {\n    const bus = useBus()\n    const provider = useChange(\n        bus,\n        b => device && b.findServiceProvider(device.deviceId),\n        [device]\n    )\n    return provider as TServiceProvider\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import { Avatar } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React from \"react\"\n\nconst PREFIX = \"ImageAvatar\"\nconst classes = {\n    img: `${PREFIX}img`,\n    small: `${PREFIX}small`,\n    default: `${PREFIX}default`,\n    large: `${PREFIX}large`,\n}\n\nconst StyledAvatar = styled(\"span\")(({ theme }) => ({\n    [`& .${classes.img}`]: {\n        marginTop: \"58%\",\n    },\n\n    [`& .${classes.small}`]: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        marginRight: theme.spacing(0.5),\n    },\n\n    [`& .${classes.default}`]: {\n        width: theme.spacing(5),\n        height: theme.spacing(5),\n        marginRight: theme.spacing(0.5),\n    },\n\n    [`& .${classes.large}`]: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1),\n    },\n}))\n\nexport default function ImageAvatar(props: {\n    alt: string\n    src: string\n    size?: \"small\" | \"large\"\n    avatar?: boolean\n}) {\n    const { src, alt, size, avatar } = props\n\n    const sizeClassName =\n        size === \"small\"\n            ? classes.small\n            : size === \"large\"\n            ? classes.large\n            : classes.default\n    return (\n        <StyledAvatar>\n            <Avatar\n                className={sizeClassName}\n                alt={alt}\n                src={src}\n                classes={{\n                    img: avatar ? classes.img : undefined,\n                }}\n            />\n        </StyledAvatar>\n    )\n}\n","import { ControlReg } from \"../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport useRegister from \"../components/hooks/useRegister\"\nimport { useRegisterUnpackedValue } from \"./useRegisterValue\"\n\nexport default function useDeviceProductIdentifier(device: JDDevice) {\n    const reg = useRegister(device?.service(0), ControlReg.ProductIdentifier)\n    const [id] = useRegisterUnpackedValue<[number]>(reg)\n    return id\n}\n","import { JDDevice } from \"../../jacdac-ts/src/jdom/device\"\nimport useDeviceProductIdentifier from \"./useDeviceProductIdentifier\"\nimport useChange from \"./useChange\"\nimport useDeviceCatalog from \"../components/devices/useDeviceCatalog\"\n\nexport default function useDeviceSpecification(device: JDDevice) {\n    const id = useDeviceProductIdentifier(device)\n    return useDeviceSpecificationFromProductIdentifier(id)\n}\n\nexport function useDeviceSpecificationFromProductIdentifier(id: number) {\n    const deviceCatalog = useDeviceCatalog()\n    const specification = useChange(\n        deviceCatalog,\n        _ => _.specificationFromProductIdentifier(id),\n        [id]\n    )\n    return specification\n}\n\nexport function useDeviceSpecificationFromIdentifier(id: string) {\n    const deviceCatalog = useDeviceCatalog()\n    const specification = useChange(\n        deviceCatalog,\n        _ => _.specificationFromIdentifier(id),\n        [id]\n    )\n    return specification\n}\n","import { humanify } from \"../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BaseReg,\n    DeviceScriptManagerReg,\n    REPORT_UPDATE,\n    SRV_DEVICE_SCRIPT_MANAGER,\n    SystemStatusCodes,\n} from \"../../jacdac-ts/src/jdom/constants\"\nimport { PackedValues } from \"../../jacdac-ts/src/jdom/pack\"\nimport { JDRegister } from \"../../jacdac-ts/src/jdom/register\"\nimport { ellipse } from \"../../jacdac-ts/src/jdom/utils\"\nimport useAnalytics, { EventProperties } from \"../components/hooks/useAnalytics\"\nimport useEventRaised from \"./useEventRaised\"\nexport interface RegisterOptions {\n    // Indicates if the HTML element is visible in view. If not, updates may be slowed or stopped.\n    visible?: boolean\n}\n\nfunction readRegisterValue<T>(\n    register: JDRegister,\n    reader: (reg: JDRegister) => T,\n    defaultValue: T,\n    trackError: (error: Error, properties?: EventProperties) => void\n): T {\n    try {\n        const value = reader(register)\n        return value\n    } catch (e) {\n        trackError(e, {\n            dev: register?.service?.device?.anonymizedDeviceId,\n            srv: register?.service?.name,\n            reg: register?.name,\n        })\n        return defaultValue\n    }\n}\n\nexport interface HumanRegisterOptions extends RegisterOptions {\n    maxLength?: number\n}\n\nfunction resolveRenderer(srv: number, reg: number) {\n    if (reg === BaseReg.StatusCode)\n        return (reg: JDRegister) => {\n            const values = reg?.unpackedValue || []\n            const [code, vendorCode] = values as [number, number]\n            if (code === undefined) return \"?\"\n            let r = `${humanify(\n                SystemStatusCodes[code] || \"?\"\n            )?.toLowerCase()} (0x${code.toString(16)})`\n            if (vendorCode) {\n                r += `, vendor: 0x${code.toString(16)}`\n            }\n            return r\n        }\n\n    if (\n        srv === SRV_DEVICE_SCRIPT_MANAGER &&\n        reg === DeviceScriptManagerReg.RuntimeVersion\n    ) {\n        return (reg: JDRegister) => {\n            const values = reg?.unpackedValue || []\n            const [patch, minor, major] = values as [number, number, number]\n            if (patch === undefined) return \"?\"\n            return `${major}.${minor}.${patch}`\n        }\n    }\n\n    return undefined\n}\n\nexport function useRegisterHumanValue(\n    register: JDRegister,\n    options?: HumanRegisterOptions\n): string {\n    const { visible, maxLength } = options || { visible: true }\n    const { trackError } = useAnalytics()\n    const renderer = register\n        ? resolveRenderer(register.service.serviceClass, register.code)\n        : undefined\n\n    return useEventRaised(\n        REPORT_UPDATE,\n        visible ? register : undefined,\n        _ =>\n            readRegisterValue(\n                _,\n                __ =>\n                    renderer\n                        ? renderer(__)\n                        : ellipse(__?.humanValue, maxLength),\n                \"???\",\n                trackError\n            ),\n        [visible, maxLength]\n    )\n}\n\nexport function useRegisterUnpackedValue<T extends PackedValues>(\n    register: JDRegister,\n    options?: RegisterOptions\n): T {\n    const { visible } = options || { visible: true }\n    const { trackError } = useAnalytics()\n\n    return useEventRaised(\n        REPORT_UPDATE,\n        visible ? register : undefined,\n        _ =>\n            readRegisterValue<T>(\n                _,\n                __ => (__?.unpackedValue || []) as T,\n                [] as T,\n                trackError\n            ),\n        [visible]\n    )\n}\n\nexport function useRegisterBoolValue(\n    register: JDRegister,\n    options?: RegisterOptions\n): boolean {\n    const { visible } = options || { visible: true }\n    return useEventRaised(\n        REPORT_UPDATE,\n        visible ? register : undefined,\n        _ => _?.boolValue,\n        [visible]\n    )\n}\n"],"names":["specification","useDeviceSpecification","server","useServiceProvider","imageUrl","useDeviceImage","withPrefix","name","bus","useBus","sz","size","identifierToUrlPath","catalog","useDeviceCatalog","specifications","useChange","_","JSON","arrayEq","l","r","useDeveloperMode","handleToggle","setDeveloperMode","type","devices","useDeviceSpecifications","transport","includeExperimental","includeDeprecated","Flags","device","useContext","dialogId","useId","labelId","transports","service","provider","b","PREFIX","classes","img","small","default","large","StyledAvatar","styled","marginTop","width","theme","height","marginRight","sizeClassName","avatar","reg","useRegister","ControlReg","useRegisterUnpackedValue","id","useDeviceProductIdentifier","useDeviceSpecificationFromProductIdentifier","deviceCatalog","value","reader","trackError","dev","register","srv","BaseReg","values","code","humanify","SystemStatusCodes","DeviceScriptManagerReg","patch","major","options","visible","useAnalytics","renderer","resolveRenderer","useEventRaised","readRegisterValue","__","ellipse"],"sourceRoot":""}